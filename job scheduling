#include<bits/stdc++.h>
struct format
{
    int deadline;
    int profit;
};
bool comp(struct format f1, format f2)
{
if(f1.profit>f2.profit)
    return true;
else return false;    
}
int jobScheduling(vector<vector<int>> &jobs) //main func
{
    // Write your code here
    int n =jobs.size();
    struct format job[n];//create data structure to store deadline & profit
    for(int i =0;i<n;i++)
    {
        job[i].deadline=jobs[i][0]; //fill our new data structure with deadline
        job[i].profit=jobs[i][1];//fill our new data structure with profit
        
    }
    sort(job,job+n,comp); //sort in decending order of profit
    int max_deadline = 0;
    
   for(int i =0;i<n;i++)
   {
       max_deadline = max(max_deadline,job[i].deadline);
   }   //find max deadline
    vector<int>filled(max_deadline+1,-1); //create a vector of size max deadline and filled with -1
    int profit=0;
    
    for(int i =0;i<n;i++)  // job id
    {    for(int j =job[i].deadline;j>0;j--) //traverse deadline in reverse
        {
         if (filled[j]==-1) //if the slot is empty
         {
            filled[j]=i; //pur our job on that day
            profit += job[i].profit; //add profit of that job in our answer
             break;
         }
        }
    }
    return profit; 
}
